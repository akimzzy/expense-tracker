{"version":3,"sources":["Components/Heading.js","context/AppReducer.js","context/GlobalState.js","Components/Totals.js","Components/Transaction.js","Components/Transactions.js","Components/AddTransaction.js","App.js","index.js"],"names":["Heading","state","action","type","transactions","filter","x","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Totals","allAmounts","useContext","map","amount","totalAmount","reduce","acc","item","totalExpenses","totalIncome","className","Math","abs","Transaction","sign","onClick","name","Transactions","key","AddTransaction","useState","setName","setAmount","onSubmit","e","preventDefault","trim","newTransaction","ceil","random","Number","submit","htmlFor","placeholder","required","onChange","target","App","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4ec8cad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Heading = () => {\r\n    return ( <>\r\n        <h1>Expenses Tracker</h1>\r\n    </> );\r\n}\r\n \r\nexport default Heading;","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(x => x.id !== action.payload)\r\n            }\r\n        \r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer'\r\n\r\n// Initial State \r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    // Actions\r\n    const deleteTransaction = (id) => {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    const addTransaction = (transaction) => {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nconst Totals = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n    const allAmounts = transactions.map(x => x.amount);\r\n    const totalAmount = allAmounts.reduce((acc, item) => (acc += item), 0);\r\n    const totalExpenses = allAmounts.filter(x => x < 0 ).reduce((acc, item) => (acc += item), 0);\r\n    const totalIncome = allAmounts.filter(x => x > 0 ).reduce((acc, item) => (acc += item), 0);\r\n\r\n    return (<div className=\"totals\">\r\n        <div className=\"balance\">\r\n            <h3>Balance</h3>\r\n            <h2>${totalAmount}</h2>\r\n        </div>\r\n\r\n        <div className=\"income\">\r\n            <h3>Income</h3>\r\n            <h2>${totalIncome}</h2>\r\n        </div>\r\n\r\n        <div className=\"expenses\">\r\n            <h3>Expenses</h3>\r\n            <h2>${Math.abs(totalExpenses)}</h2>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Totals;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n\r\n    const sign = transaction.amount > 0 ? \"+\" : \"-\";\r\n    const amount = Math.abs(transaction.amount)\r\n\r\n    return (<li className={transaction.amount > 0 ? \"transaction_item income-border\" : \"transaction_item expense-border\"}>\r\n        <button onClick={() => deleteTransaction(transaction.id)}>X</button>\r\n        <div>{transaction.name}</div>\r\n        <div>{sign}${amount}</div>\r\n    </li>);\r\n}\r\n\r\nexport default Transaction;","import React, { useContext } from 'react';\r\nimport Transaction from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transactions = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return (<ul className=\"transaction_list\">\r\n        <h3>Transaction history</h3>\r\n        {transactions.map(x => <Transaction key={x.id} transaction={x} />)}\r\n    </ul>);\r\n}\r\n\r\nexport default Transactions;","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [amount, setAmount] = useState(0)\r\n    const newId = () => Math.ceil(Math.random() * 1000000) + 1;\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (name.trim() !== \"\" && amount !== 0) {\r\n            const newTransaction = {\r\n                id: newId(),\r\n                name,\r\n                amount: Number(amount)\r\n            }\r\n            addTransaction(newTransaction)\r\n            setAmount(0)\r\n            setName(\"\")\r\n        } \r\n    }\r\n\r\n    return (<form onSubmit={(e) => {submit(e)}}>\r\n        <h3>New transaction</h3>\r\n        <p>If transaction is an expense, type \"-\" before amount. example \"-10\"</p>\r\n        <div className=\"name\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input placeholder=\"enter text here\" required id=\"name\" type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </div>\r\n        <div className=\"amount\">\r\n            <label htmlFor=\"amount\">Amount</label>\r\n            <input required id=\"amount\" type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} />\r\n        </div>\r\n        <button >Add new transaction</button>\r\n    </form >);\r\n}\r\n\r\nexport default AddTransaction;","import React from 'react';\nimport './App.css';\nimport Heading from './Components/Heading';\nimport Totals from './Components/Totals';\nimport Transactions from './Components/Transactions';\nimport AddTransaction from './Components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState'\n\n\nfunction App() {\n\n  document.title = \"Expenses tracker\"\n\n  return (\n    <GlobalProvider>\n      <Heading />\n      <Totals />\n      <AddTransaction />\n      <Transactions />\n    </GlobalProvider>\n  );\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}